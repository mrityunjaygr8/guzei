// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: queries.sql

package models

import (
	"context"
)

const getUser = `-- name: GetUser :one
SELECT email, password, "createdAt", "updatedAt", "ID", admin FROM users WHERE email = $1 LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRow(ctx, getUser, email)
	var i User
	err := row.Scan(
		&i.Email,
		&i.Password,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ID,
		&i.Admin,
	)
	return i, err
}

const listUsers = `-- name: ListUsers :one
SELECT email, password, "createdAt", "updatedAt", "ID", admin FROM users ORDER BY email LIMIT $1 OFFSET $2
`

type ListUsersParams struct {
	Limit  int32
	Offset int32
}

func (q *Queries) ListUsers(ctx context.Context, arg ListUsersParams) (User, error) {
	row := q.db.QueryRow(ctx, listUsers, arg.Limit, arg.Offset)
	var i User
	err := row.Scan(
		&i.Email,
		&i.Password,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ID,
		&i.Admin,
	)
	return i, err
}
